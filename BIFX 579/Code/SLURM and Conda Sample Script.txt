# SLURM commands are the ones that allow you to move back and forth from the head node and the compute nodes and also manage scripts and processing jobs.

# Conda commands are an easy way to control the computational environment by loading particular versions of programs into your work space. You can use conda commands to load a program into the workspace on the compute nodes to work interactively or you can launch scripts from the head node to run commands on the compute nodes automatically

# First of all, you need to get from the head node (where you land when you ssh in) to a compute node before you do any real processing. To do this, you can get a new bash prompt on the compute node with the following command: 

srun --pty bash    #SLURM command

# Once you have gotten onto the compute node, you can initiate conda with the command:

conda init bash   #conda command

# The first time you use a new conda program you need to create a conda environment that has the program loaded into it:

conda create -n funannotate python=2.7 funannotate #This step took a long time for me

conda create -n kraken2_env kraken2

# I copied this line strait from the funannotate manual. The general command is 'create -n name packageName'

# Then you can close the environment with the command:

conda deactivate

# For all future sessions when you want to work with this conda environment, you can start it by going to the compute node and then using the command:

source activate funannotate

# If for some reason that doesn't work, try running 'conda init bash' first and then 'source activate funannotate' or 'conda activate funannotate'

# Once the environment is loaded, the name of the environment should show in the prompt and you can run your commands 

# Remember to start any command that will run for a long time with 'nohup' so that it does not fail if you loose your connection

# Once you are done, you can close the environment with the command:

conda deactivate  # conda command

# To exit the compute node back to the head node, use the command:

exit

# In order to run a script that uses a conda environment, do the following:

# Write a script with the following SLURM header:

#!/bin/bash
#SBATCH --job-name=genomeBuild #change the name to whatever you want
#SBATCH --mail-type=END,FAIL
#SBATCH --mail-user=darby@hood.edu #the email doesn't really seem to work
#SBATCH --nodes=1  # just start with one node and one task, scale up if needed
#SBATCH --ntasks=1

# You can change directories or do whatever you need to within the script
# To open the conda environment use the following commands:
conda init bash
source activate funannotate #use whatever name you called your environment
#If 'source activate name' does not work, try 'conda activate name' 

# Then put the commands that you want to run inside the environment
# Remember to redirect your standard error to file by adding '&> errorFileName.txt' at the end of the command

# Once your script is completed and saved, you can launch it with the following command:

sbatch pathToScript/ScriptName.sh #SLURM command

sbatch /home/jjs14/capstone/JJS_FastQC_Test.sh

# I like to always keep scripts in my scripts folder and launch them from there to keep out output files organized

# To keep track of your job you can use the command:

squeue #SLURM command

# You can also check the automatic SLURM error file by going to the directory where you launched your script (i.e. the scripts folder) and using 'cat' to read the appropriate file. For example: 

cat slurm-NNN.out #where NNN is the job number from submitting the script
# This will contain output and errors related to running the commands

# You should also check the error stream from the program (which you redirected in your script to errorFileName.txt). This error file will contain output and errors generated by the program commands.